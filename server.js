/********************************************
 * DO NOT EDIT THIS FILE
 *******************************************/

const express = require("express");
const app = express();
const bodyParser = require("body-parser");
const fs = require("fs");
const path = require("path");
const router = express.Router();

const enableCORS = function (req, res, next) {
  if (!process.env.DISABLE_XORIGIN) {
    const allowedOrigins = ["https://www.freecodecamp.org"];
    const origin = req.headers.origin;
    if (!process.env.XORIGIN_RESTRICT || allowedOrigins.indexOf(origin) > -1) {
      res.set({
        "Access-Control-Allow-Origin": origin,
        "Access-Control-Allow-Methods": "GET, POST, OPTIONS",
        "Access-Control-Allow-Headers":
          "Origin, X-Requested-With, Content-Type, Accept",
      });
    }
  }
  next();
};

const TIMEOUT = 10000;
app.use(bodyParser.urlencoded({ extended: "false" }));
app.use(bodyParser.json());

// Serve homepage
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "views", "index.html"));
});

const Person = require("./myApp.js").PersonModel;

// Example route
router.get("/is-mongoose-ok", (req, res) => {
  res.json({ isMongooseOk: !!Person.db.readyState });
});

// FCC routes will use Person and functions from myApp.js
// (unchanged from your previous server.js)

// Enable CORS for all _api routes
app.use("/_api", enableCORS, router);

// Error handler
app.use(function (err, req, res, next) {
  if (err) {
    res.status(err.status || 500).type("txt").send(err.message || "SERVER ERROR");
  }
});

// 404 handler
app.use(function (req, res) {
  res.status(404).type("txt").send("Not Found");
});

// --- Listen immediately (Railway-ready) ---
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Your app is listening on port ${PORT}`);
});
